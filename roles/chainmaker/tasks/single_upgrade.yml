# 单机升级准备
- name: 引入组织id变量
  ansible.builtin.import_tasks: single_get_orglist.yml
- name: 检查旧版本
  ansible.builtin.stat:
    path: "{{ workspace.run }}/{{ item }}/{{ bin }}{{ chainmaker.old_version }}"
  register: stat_results
  with_items: "{{ orgid_list }}"
  ignore_errors: true
- name: 备份旧版本
  ansible.builtin.copy:
    src: "{{ workspace.run }}/{{ item.item }}/{{ bin }}"
    dest: "{{ workspace.run }}/{{ item.item }}/{{ bin }}{{ chainmaker.old_version }}"
    mode: 0755
    force: true
    remote_src: true
  loop: "{{ stat_results.results }}"
  loop_control:
    label: "{{ item.item }}"
  when: not item.stat.exists # 文件不存在时进行备份
- name: 停止systemd服务
  ansible.builtin.systemd:
    name: "{{ item }}-chain.service"
    state: stopped
    daemon_reload: true
  failed_when: false
  loop: "{{ orgid_list }}"
  become: true
  tags: stop
- name: 拷贝动态连接库
  ansible.builtin.copy:
    src: "{{ workspace.compile }}/{{ chainmaker.name }}{{ chainmaker.new_version }}/main/libwasmer_runtime_c_api.so"
    dest: "{{ workspace.run }}/{{ item }}/lib/libwasmer.so"
    mode: 0777
    remote_src: true
  loop: "{{ orgid_list }}"
- name: 拷贝新版本
  ansible.builtin.copy:
    src: "{{ workspace.compile }}/{{ bin }}{{ chainmaker.new_version }}"
    dest: "{{ workspace.run }}/{{ item }}/{{ bin }}"
    mode: 0755
    force: true
    remote_src: true
  loop: "{{ orgid_list }}"
- name: 重启systemd服务
  ansible.builtin.systemd:
    name: "{{ orgid_list[idx] }}-chain.service"
    state: restarted
    daemon_reload: true
  loop: "{{ orgid_list }}"
  loop_control:
    index_var: idx
  become: true
