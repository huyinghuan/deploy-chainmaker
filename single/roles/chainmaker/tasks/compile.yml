- ansible.builtin.import_tasks: gopath.yml
- name: Check GO Install
  ansible.builtin.command: "{{ chainmaker.go_compile_version }} version"
  register: go_version
  environment:
    PATH: /usr/local/go/bin:{{ gopath }}/bin:{{ ansible_env.PATH }}
  changed_when: false
- name: Show Go version
  ansible.builtin.debug:
    msg: "{{ go_version.stdout }}"
  tags: prepare
  when: go_version.rc == 0
- name: 准备编译项目的go版本
  ansible.builtin.shell: |
    go install golang.org/dl/{{ chainmaker.go_compile_version }}@latest
    {{ chainmaker.go_compile_version }} download
    {{ chainmaker.go_compile_version }} version
  tags: prepare
  register: go_compile_version_result
  changed_when: true
  environment:
    PATH: /usr/local/go/bin:{{ gopath }}/bin:{{ ansible_env.PATH }}
    GOPROXY: https://proxy.golang.com.cn,direct
  when: go_version.rc != 0
- name: Show Go version
  ansible.builtin.debug:
    msg: "{{ go_compile_version_result.stdout }}"
  tags: prepare
  when: go_version.rc != 0
- name: 项目clone
  ansible.builtin.git:
    repo: "https://{{ chainmaker.username | urlencode }}:{{ chainmaker.password | urlencode }}@{{ chainmaker.repo }}"
    dest: "{{ workspace.compile }}/{{ chainmaker.name }}"
    version: "{{ chainmaker.version }}"
    force: true
    depth: 1
    single_branch: true
- name: 编译脚本拷贝
  ansible.builtin.template:
    src: compile.sh.j2
    dest: "{{ workspace.compile }}/{{ chainmaker.name }}/compile.ansible.sh"
    mode: 0755
- name: 编译
  ansible.builtin.command: ./compile.ansible.sh
  args:
    chdir: "{{ workspace.compile }}/{{ chainmaker.name }}"
  environment:
    PATH: /usr/local/go/bin:{{ gopath }}/bin:{{ ansible_env.PATH }}
  register: result
  changed_when: true
- name: Show Logs
  ansible.builtin.debug:
    msg: "{{ result.stdout_lines }}"
