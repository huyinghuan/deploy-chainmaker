- name: 单机部署链
  hosts: single_server
  # become: true
  tasks:
    - name: 环境检查
      ansible.builtin.import_role:
        name: chainmaker
        tasks_from: check
    - name: 目录准备
      ansible.builtin.import_role:
        name: chainmaker
        tasks_from: prepare
    - name: 编译
      ansible.builtin.import_role:
        name: chainmaker
        tasks_from: compile
      tags: compile
    - name: 编译证书工具
      ansible.builtin.import_role:
        name: chainmaker
        tasks_from: certs.yml
      tags: certs-tools
    # - name: 复制运行时文件
    #   ansible.builtin.copy:
    #     src: "{{chain.buildDir}}/{{chain.binName}}"
    #     dest: "{{deploy.dir}}/{{item}}/{{chain.binName}}"
    #     mode: "0777"
    #     remote_src: true
    #   loop: "{{org_list}}"
    # - name: 上传证书
    #   ansible.builtin.unarchive:
    #     src: "./crypto-config.zip"
    #     dest: "{{deploy.dir}}/{{item}}"
    #   loop: "{{org_list}}"
    # - name: 上传动态文件
    #   tags: upload_lib
    #   copy:
    #     src: "../lib"
    #     dest: "{{deploy.dir}}/{{item}}/"
    #     mode: 0777
    #   loop: "{{org_list}}"
    # - name: 复制配置文件
    #   ansible.builtin.copy:
    #     src: "./conf/"
    #     dest: "{{deploy.dir}}/{{item}}"
    #     mode: "0777"
    #   loop: "{{org_list}}"
    # - name: 修改配置文件
    #   tags: modify
    #   ansible.builtin.replace:
    #     path: "{{deploy.dir}}/{{item}}/mangochain.yml"
    #     regexp: "\\$orgId"
    #     replace: "{{item}}"
    #   loop: "{{org_list}}"
    # - name: 修改配置文件
    #   tags: modify
    #   ansible.builtin.replace:
    #     path: "{{deploy.dir}}/{{item}}/mangochain.yml"
    #     regexp: "\\$data"
    #     replace: "{{deploy.data}}/{{item}}"
    #   loop: "{{org_list}}"
    # - name: 修改配置文件
    #   tags: modify_log
    #   ansible.builtin.replace:
    #     path: "{{deploy.dir}}/{{item}}/log.yml"
    #     regexp: "\\$logdir"
    #     replace: "{{deploy.log}}/{{item}}"
    #   loop: "{{org_list}}"
    # - name: 修改配置文件rpc端口
    #   ansible.builtin.replace:
    #     path: "{{deploy.dir}}/{{item}}/mangochain.yml"
    #     regexp: "\\$rpcPort"
    #     replace: "{{portMap[item].rpc}}"
    #   loop: "{{org_list}}"
    # - name: 修改配置文件p2p端口
    #   ansible.builtin.replace:
    #     path: "{{deploy.dir}}/{{item}}/mangochain.yml"
    #     regexp: "\\$p2pPort"
    #     replace: "{{portMap[item].p2p}}"
    #   loop: "{{org_list}}"
    # - name: 运行节点进程
    #   tags: run
    #   shell: |
    #     cd {{deploy.dir}}/{{item}}
    #     if [ "$(pm2 id {{chain.binName}}_{{item}})" != "[]" ]; then
    #       echo 共识节点已启动
    #       exit 0
    #     fi
    #     pm2 start {{chain.binName}} --name {{chain.binName}}_{{item}} -l start.log --interpreter none -- start -c ./mangochain.yml
    #   register: result
    #   environment:
    #     LD_LIBRARY_PATH: "{{deploy.dir}}/{{item}}/lib"
    #     PATH: "{{deploy.dir}}/{{item}}/lib:{{ ansible_env.PATH }}"
    #     WASMER_BACKTRACE: "1"
    #   loop: "{{org_list}}"
